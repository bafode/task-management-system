{"version":3,"sources":["store.js","reducers/projectReducers.js","constants/projectConstants.js","reducers/taskReducers.js","constants/taskConstants.js","reducers/userReducers.js","constants/userConstants.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Project.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","screens/HomeScreen.js","actions/projectActions.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProjectCreateScreen.js","screens/ProfileScreen.js","actions/taskActions.js","screens/TaskCreateScreen.js","screens/ProjectScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/TaskListScreen.js","screens/TaskEditScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","projectList","state","projects","action","type","loading","payload","error","projectDetails","project","projectDelete","success","projectCreate","projectUpdate","taskList","tasks","pages","page","taskDetails","task","taskDelete","taskCreate","taskUpdate","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","name","Item","onClick","isAdmin","Footer","Row","Col","Project","Card","Body","_id","Title","as","Message","children","Alert","defaultProps","Loader","Spinner","animation","role","style","width","height","margin","display","Paginate","keyword","Pagination","Array","keys","map","x","key","active","Meta","description","keywords","Helmet","content","HomeScreen","useEffect","sm","md","lg","xl","FormContainer","xs","LoginScreen","history","useState","email","setEmail","password","setPassword","redirect","search","split","push","Form","onSubmit","e","preventDefault","post","setItem","stringify","login","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProductCreateScreen","setDescription","createProject","ProfileScreen","put","updateUserProfile","listTasks","pageNumber","TaskCreateScreen","status","setStatus","priority","setPriority","createTask","idAdmin","Projectcreen","match","params","ListGroup","Table","striped","bordered","hover","responsive","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","color","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","Check","label","checked","TaskListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdTask","product","deleteTask","TaskEditScreen","taskId","updateTask","App","path","component","ProjectCreateScreen","ProjectScreen","exact","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.8d4204de.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport {\n  taskListReducer,\n  taskDetailsReducer,\n  taskDeleteReducer,\n  taskCreateReducer,\n  taskUpdateReducer\n} from './reducers/taskReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  projectListReducer,\n  projectDetailsReducer,\n  projectDeleteReducer,\n  projectCreateReducer,\n  projectUpdateReducer,\n} from './reducers/projectReducers'\n\nconst reducer = combineReducers({\n  projectList: projectListReducer,\n  projectDetails: projectDetailsReducer,\n  projectDelete: projectDeleteReducer,\n  projectCreate: projectCreateReducer,\n  projectUpdate: projectUpdateReducer,\n  taskList: taskListReducer,\n  taskDetails: taskDetailsReducer,\n  taskDelete: taskDeleteReducer,\n  taskCreate: taskCreateReducer,\n  taskUpdate: taskUpdateReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  \n})\n\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\n\nconst initialState = {\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PROJECT_LIST_REQUEST,\n  PROJECT_LIST_SUCCESS,\n  PROJECT_LIST_FAIL,\n  PROJECT_DETAILS_REQUEST,\n  PROJECT_DETAILS_SUCCESS,\n  PROJECT_DETAILS_FAIL,\n  PROJECT_DELETE_REQUEST,\n  PROJECT_DELETE_SUCCESS,\n  PROJECT_DELETE_FAIL,\n  PROJECT_CREATE_RESET,\n  PROJECT_CREATE_FAIL,\n  PROJECT_CREATE_SUCCESS,\n  PROJECT_CREATE_REQUEST,\n  PROJECT_UPDATE_REQUEST,\n  PROJECT_UPDATE_SUCCESS,\n  PROJECT_UPDATE_FAIL,\n  PROJECT_UPDATE_RESET,\n} from '../constants/projectConstants'\n\nexport const projectListReducer = (state = { projects: [] }, action) => {\n  switch (action.type) {\n    case PROJECT_LIST_REQUEST:\n      return { loading: true, projects: [] }\n    case PROJECT_LIST_SUCCESS:\n      return {\n        loading: false,\n        projects: action.payload.projects,\n      }\n    case PROJECT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const projectDetailsReducer = (\n  state = { project: { } },\n  action\n) => {\n  switch (action.type) {\n    case PROJECT_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case PROJECT_DETAILS_SUCCESS:\n      return { loading: false, project: action.payload }\n    case PROJECT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const projectDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PROJECT_DELETE_REQUEST:\n      return { loading: true }\n    case PROJECT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PROJECT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const projectCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PROJECT_CREATE_REQUEST:\n      return { loading: true }\n    case PROJECT_CREATE_SUCCESS:\n      return { loading: false, success: true, project: action.payload }\n    case PROJECT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PROJECT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const projectUpdateReducer = (state = { project: {} }, action) => {\n  switch (action.type) {\n    case PROJECT_UPDATE_REQUEST:\n      return { loading: true }\n    case PROJECT_UPDATE_SUCCESS:\n      return { loading: false, success: true, project: action.payload }\n    case PROJECT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PROJECT_UPDATE_RESET:\n      return { project: {} }\n    default:\n      return state\n  }\n}\n\n\n\n","export const PROJECT_LIST_REQUEST = 'PROJECT_LIST_REQUEST'\nexport const PROJECT_LIST_SUCCESS = 'PROJECT_LIST_SUCCESS'\nexport const PROJECT_LIST_FAIL = 'PROJECT_LIST_FAIL'\n\nexport const PROJECT_DETAILS_REQUEST = 'PROJECT_DETAILS_REQUEST'\nexport const PROJECT_DETAILS_SUCCESS = 'PROJECT_DETAILS_SUCCESS'\nexport const PROJECT_DETAILS_FAIL = 'PROJECT_DETAILS_FAIL'\n\nexport const PROJECT_DELETE_REQUEST = 'PROJECT_DELETE_REQUEST'\nexport const PROJECT_DELETE_SUCCESS = 'PROJECT_DELETE_SUCCESS'\nexport const PROJECT_DELETE_FAIL = 'PROJECT_DELETE_FAIL'\n\nexport const PROJECT_CREATE_REQUEST = 'PROJECT_CREATE_REQUEST'\nexport const PROJECT_CREATE_SUCCESS = 'PROJECT_CREATE_SUCCESS'\nexport const PROJECT_CREATE_FAIL = 'PROJECT_CREATE_FAIL'\nexport const PROJECT_CREATE_RESET = 'PROJECT_CREATE_RESET'\n\nexport const PROJECT_UPDATE_REQUEST = 'PROJECT_UPDATE_REQUEST'\nexport const PROJECT_UPDATE_SUCCESS = 'PROJECT_UPDATE_SUCCESS'\nexport const PROJECT_UPDATE_FAIL = 'PROJECT_UPDATE_FAIL'\nexport const PROJECT_UPDATE_RESET = 'PROJECT_UPDATE_RESET'\n\nexport const PROJECT_CREATE_REVIEW_REQUEST = 'PROJECT_CREATE_REVIEW_REQUEST'\nexport const PROJECT_CREATE_REVIEW_SUCCESS = 'PROJECT_CREATE_REVIEW_SUCCESS'\nexport const PROJECT_CREATE_REVIEW_FAIL = 'PROJECT_CREATE_REVIEW_FAIL'\nexport const PROJECT_CREATE_REVIEW_RESET = 'PROJECT_CREATE_REVIEW_RESET'\n\nexport const PROJECT_TOP_REQUEST = 'PROJECT_TOP_REQUEST'\nexport const PROJECT_TOP_SUCCESS = 'PROJECT_TOP_SUCCESS'\nexport const PROJECT_TOP_FAIL = 'PROJECT_TOP_FAIL'\n","import {\n  TASK_LIST_REQUEST,\n  TASK_LIST_SUCCESS,\n  TASK_LIST_FAIL,\n  TASK_DETAILS_REQUEST,\n  TASK_DETAILS_SUCCESS,\n  TASK_DETAILS_FAIL,\n  TASK_DELETE_REQUEST,\n  TASK_DELETE_SUCCESS,\n  TASK_DELETE_FAIL,\n  TASK_CREATE_RESET,\n  TASK_CREATE_FAIL,\n  TASK_CREATE_SUCCESS,\n  TASK_CREATE_REQUEST,\n  TASK_UPDATE_REQUEST,\n  TASK_UPDATE_SUCCESS,\n  TASK_UPDATE_FAIL,\n  TASK_UPDATE_RESET,\n  TASK_CREATE_REVIEW_REQUEST,\n  TASK_CREATE_REVIEW_SUCCESS,\n  TASK_CREATE_REVIEW_FAIL,\n  TASK_CREATE_REVIEW_RESET,\n  TASK_TOP_REQUEST,\n  TASK_TOP_SUCCESS,\n  TASK_TOP_FAIL,\n} from '../constants/taskConstants'\n\nexport const taskListReducer = (state = { tasks: [] }, action) => {\n  switch (action.type) {\n    case TASK_LIST_REQUEST:\n      return { loading: true, tasks: [] }\n    case TASK_LIST_SUCCESS:\n      return {\n        loading: false,\n        tasks: action.payload.tasks,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case TASK_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const taskDetailsReducer = (\n  state = { task: {} },\n  action\n) => {\n  switch (action.type) {\n    case TASK_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case TASK_DETAILS_SUCCESS:\n      return { loading: false, task: action.payload }\n    case TASK_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const taskDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case TASK_DELETE_REQUEST:\n      return { loading: true }\n    case TASK_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case TASK_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const taskCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case TASK_CREATE_REQUEST:\n      return { loading: true }\n    case TASK_CREATE_SUCCESS:\n      return { loading: false, success: true, task: action.payload }\n    case TASK_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case TASK_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const taskUpdateReducer = (state = { task: {} }, action) => {\n  switch (action.type) {\n    case TASK_UPDATE_REQUEST:\n      return { loading: true }\n    case TASK_UPDATE_SUCCESS:\n      return { loading: false, success: true, task: action.payload }\n    case TASK_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case TASK_UPDATE_RESET:\n      return { task: {} }\n    default:\n      return state\n  }\n}\n\n// export const productReviewCreateReducer = (state = {}, action) => {\n//   switch (action.type) {\n//     case PRODUCT_CREATE_REVIEW_REQUEST:\n//       return { loading: true }\n//     case PRODUCT_CREATE_REVIEW_SUCCESS:\n//       return { loading: false, success: true }\n//     case PRODUCT_CREATE_REVIEW_FAIL:\n//       return { loading: false, error: action.payload }\n//     case PRODUCT_CREATE_REVIEW_RESET:\n//       return {}\n//     default:\n//       return state\n//   }\n// }\n\n// export const productTopRatedReducer = (state = { products: [] }, action) => {\n//   switch (action.type) {\n//     case PRODUCT_TOP_REQUEST:\n//       return { loading: true, products: [] }\n//     case PRODUCT_TOP_SUCCESS:\n//       return { loading: false, products: action.payload }\n//     case PRODUCT_TOP_FAIL:\n//       return { loading: false, error: action.payload }\n//     default:\n//       return state\n//   }\n// }\n","export const TASK_LIST_REQUEST = 'TASK_LIST_REQUEST'\nexport const TASK_LIST_SUCCESS = 'TASK_LIST_SUCCESS'\nexport const TASK_LIST_FAIL = 'TASK_LIST_FAIL'\n\nexport const TASK_DETAILS_REQUEST = 'TASK_DETAILS_REQUEST'\nexport const TASK_DETAILS_SUCCESS = 'TASK_DETAILS_SUCCESS'\nexport const TASK_DETAILS_FAIL = 'TASK_DETAILS_FAIL'\n\nexport const TASK_DELETE_REQUEST = 'TASK_DELETE_REQUEST'\nexport const TASK_DELETE_SUCCESS = 'TASK_DELETE_SUCCESS'\nexport const TASK_DELETE_FAIL = 'TASK_DELETE_FAIL'\n\nexport const TASK_CREATE_REQUEST = 'TASK_CREATE_REQUEST'\nexport const TASK_CREATE_SUCCESS = 'TASK_CREATE_SUCCESS'\nexport const TASK_CREATE_FAIL = 'TASK_CREATE_FAIL'\nexport const TASK_CREATE_RESET = 'TASK_CREATE_RESET'\n\nexport const TASK_UPDATE_REQUEST = 'TASK_UPDATE_REQUEST'\nexport const TASK_UPDATE_SUCCESS = 'TASK_UPDATE_SUCCESS'\nexport const TASK_UPDATE_FAIL = 'TASK_UPDATE_FAIL'\nexport const TASK_UPDATE_RESET = 'TASK_UPDATE_RESET'\n\nexport const TASK_CREATE_REVIEW_REQUEST = 'TASK_CREATE_REVIEW_REQUEST'\nexport const TASK_CREATE_REVIEW_SUCCESS = 'TASK_CREATE_REVIEW_SUCCESS'\nexport const TASK_CREATE_REVIEW_FAIL = 'TASK_CREATE_REVIEW_FAIL'\nexport const TASK_CREATE_REVIEW_RESET = 'TASK_CREATE_REVIEW_RESET'\n\nexport const TASK_TOP_REQUEST = 'TASK_TOP_REQUEST'\nexport const TASK_TOP_SUCCESS = 'TASK_TOP_SUCCESS'\nexport const TASK_TOP_FAIL = 'TASK_TOP_FAIL'\n","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\n\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  localStorage.removeItem('cartItems')\n  localStorage.removeItem('shippingAddress')\n  localStorage.removeItem('paymentMethod')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: USER_LIST_RESET })\n  document.location.href = '/login'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\n    dispatch({ type: USER_DETAILS_RESET })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>Task Management System</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            \n            <Nav className='ml-auto'>\n              \n              {userInfo ? (\n                <>\n                 <LinkContainer to='/projects/create'>\n                  <Nav.Link>\n                    <i className='fas fa-plus'></i> Create Project\n                  </Nav.Link>\n                  </LinkContainer>\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n                </>\n              ) : (\n                  <>\n                 \n                     <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> Sign In\n                  </Nav.Link>\n                  </LinkContainer>\n                  </>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/tasklist'>\n                    <NavDropdown.Item>Projects</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/tasklist'>\n                    <NavDropdown.Item>Tasks</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>Copyright &copy; Task Management System</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\n\nconst Project = ({ project }) => {\n  return (\n    <Card className='my-3 p-3 rounded'>\n      <Card.Body>\n        <Link to={`/project/${project._id}`}>\n          <Card.Title as='h3'>\n            <strong>{project.name}</strong>\n          </Card.Title>\n        </Link>\n\n    \n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Project\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'Welcome To Task Management System Software',\n  description: 'We provide best services',\n  keywords: 'electronics, buy electronics, cheap electroincs',\n}\n\nexport default Meta\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Project from '../components/Project'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport Meta from '../components/Meta'\nimport { listProjects } from '../actions/projectActions'\nimport { Card } from 'react-bootstrap'\n\nconst HomeScreen = () => {\n \n\n  const dispatch = useDispatch()\n\n    const projectList = useSelector((state) => state.projectList)\n  const { loading, error, projects} = projectList\n\n  useEffect(() => {\n    dispatch(listProjects())\n  }, [dispatch])\n\n  return (\n    <>\n      <Meta />\n      <h1>Projects</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ): (\n        <>\n          <Row>\n             {projects.map((project) => (\n              <Col key={project._id} sm={12} md={6} lg={4} xl={3}>\n                <Project project={project}/>\n              </Col>\n            ))}\n          </Row>\n         \n        </>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import axios from 'axios'\nimport {\n  PROJECT_LIST_REQUEST,\n  PROJECT_LIST_SUCCESS,\n  PROJECT_LIST_FAIL,\n  PROJECT_DETAILS_REQUEST,\n  PROJECT_DETAILS_SUCCESS,\n  PROJECT_DETAILS_FAIL,\n  PROJECT_DELETE_SUCCESS,\n  PROJECT_DELETE_REQUEST,\n  PROJECT_DELETE_FAIL,\n  PROJECT_CREATE_REQUEST,\n  PROJECT_CREATE_SUCCESS,\n  PROJECT_CREATE_FAIL,\n  PROJECT_UPDATE_REQUEST,\n  PROJECT_UPDATE_SUCCESS,\n  PROJECT_UPDATE_FAIL,\n} from '../constants/projectConstants'\nimport { logout } from './userActions'\n\nexport const listProjects = () => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PROJECT_LIST_REQUEST })\n\n    const { data } = await axios.get(\n      `/api/projects`\n    )\n\n    dispatch({\n      type: PROJECT_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PROJECT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listProjectDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PROJECT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/projects/${id}`)\n\n    dispatch({\n      type: PROJECT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PROJECT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteProject = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/projects/${id}`, config)\n\n    dispatch({\n      type: PROJECT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PROJECT_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProject = (name,description) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    \n    const { data } = await axios.post(`/api/projects`, {name,description},config)\n\n    dispatch({\n      type: PROJECT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PROJECT_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateProject = (project) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/projects/${project._id}`,\n      project,\n      config\n    )\n\n    dispatch({\n      type: PROJECT_UPDATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({ type: PROJECT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PROJECT_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport {createProject} from '../actions/projectActions'\nimport { PROJECT_CREATE_SUCCESS } from '../constants/projectConstants'\n\nconst ProductCreateScreen = ({history }) => {\n\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n\n  const dispatch = useDispatch()\n\n  const projectCreate = useSelector((state) => state.projectCreate)\n    const { loading, error, success } = projectCreate\n    \n    \n\n  useEffect(() => {\n     if (success) {\n      dispatch({ type: PROJECT_CREATE_SUCCESS })\n           history.push('/')\n    } \n  }, [history])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n      dispatch(\n          createProject(name, description)\n      )\n      setName(\"\")\n      setDescription(\"\")\n  }\n\n  return (\n    <>\n      <Link to='/' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Create Project</h1>\n        {loading && <Loader />}\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Create\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductCreateScreen\n","import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails('profile'))\n\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user, success])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </Col>\n     \n    </Row>\n  )\n}\n\nexport default ProfileScreen\n","import axios from 'axios'\nimport {\n  TASK_LIST_REQUEST,\n  TASK_LIST_SUCCESS,\n  TASK_LIST_FAIL,\n  TASK_DETAILS_REQUEST,\n  TASK_DETAILS_SUCCESS,\n  TASK_DETAILS_FAIL,\n  TASK_DELETE_SUCCESS,\n  TASK_DELETE_REQUEST,\n  TASK_DELETE_FAIL,\n  TASK_CREATE_REQUEST,\n  TASK_CREATE_SUCCESS,\n  TASK_CREATE_FAIL,\n  TASK_UPDATE_REQUEST,\n  TASK_UPDATE_SUCCESS,\n  TASK_UPDATE_FAIL,\n  TASK_CREATE_REVIEW_REQUEST,\n  TASK_CREATE_REVIEW_SUCCESS,\n  TASK_CREATE_REVIEW_FAIL,\n  TASK_TOP_REQUEST,\n  TASK_TOP_SUCCESS,\n  TASK_TOP_FAIL,\n} from '../constants/taskConstants'\nimport { logout } from './userActions'\n\nexport const listTasks = (keyword = '', pageNumber = '') => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: TASK_LIST_REQUEST })\n\n    const { data } = await axios.get(\n      `/api/tasks?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n\n    dispatch({\n      type: TASK_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: TASK_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listTaskDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: TASK_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/tasks/${id}`)\n\n    dispatch({\n      type: TASK_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: TASK_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteTask = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TASK_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/tasks/${id}`, config)\n\n    dispatch({\n      type: TASK_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: TASK_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createTask = (name,status,priority,description) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TASK_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/tasks`, {name,description,status,priority}, config)\n\n    dispatch({\n      type: TASK_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: TASK_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateTask = (task) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TASK_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/tasks/${task._id}`,\n      task,\n      config\n    )\n\n    dispatch({\n      type: TASK_UPDATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({ type: TASK_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: TASK_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createTaskReview = (taskId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: TASK_CREATE_REVIEW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.post(`/api/tasks/${taskId}/reviews`, review, config)\n\n    dispatch({\n      type: TASK_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: TASK_CREATE_REVIEW_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listTopTasks = () => async (dispatch) => {\n  try {\n    dispatch({ type: TASK_TOP_REQUEST })\n\n    const { data } = await axios.get(`/api/tasks/top`)\n\n    dispatch({\n      type: TASK_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: TASK_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { createTask } from '../actions/taskActions'\nimport { TASK_CREATE_RESET, TASK_CREATE_SUCCESS} from '../constants/taskConstants'\n\nconst TaskCreateScreen = ({ history }) => {\n\n  const [name, setName] = useState('')\n  const [status, setStatus] = useState('')\n  const [priority, setPriority] = useState('')\n  const [description, setDescription] = useState('')\n\n  const dispatch = useDispatch()\n\n  const taskCreate = useSelector((state) => state.taskCreate)\n  const { loading, error, success } = taskCreate\n    \n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (success) {\n      dispatch({ type: TASK_CREATE_SUCCESS })\n       history.push('/admin/tasklist')\n    } \n  }, [dispatch,history])\n\n   const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createTask(\n        name,\n        status,\n        priority,\n        description,\n      )\n    )\n      if (userInfo && userInfo.idAdmin) {\n           history.push('/admin/tasklist')\n      }\n  }\n\n  return (\n    <>\n      <Link to='/admin/tasklist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Create Task</h1>\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n             <Form.Group controlId='status'>\n                        <Form.Label>Status</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={status}\n                          onChange={(e) =>setStatus(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='Not processed'>1 - Not processed</option>\n                          <option value='Processing'>2 - Processing</option>\n                          <option value='Delivered'>3 - Delivered</option>\n                          <option value='Cancelled'>4 - Cancelled</option>\n                        </Form.Control>\n                </Form.Group>\n\n             <Form.Group controlId='priority'>\n                        <Form.Label>Priority</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={priority}\n                        onChange={(e) =>setPriority(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='Low'>1 - Low</option>\n                          <option value='Medium'>2 - Medium</option>\n                          <option value='High'>3 - High</option>\n                        </Form.Control>\n             </Form.Group>\n           \n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Create\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default TaskCreateScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Table, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport { listProjectDetails } from '../actions/projectActions'\nimport { listTasks } from '../actions/taskActions'\nimport TaskCreateScreen from './TaskCreateScreen'\n\n\n\n\nconst Projectcreen = ({ history, match }) => {\n\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n\n  const dispatch = useDispatch()\n\n  const projectDetails = useSelector((state) => state.projectDetails)\n  const { loading, error, project } = projectDetails\n\n   const taskList = useSelector((state) => state.taskList)\n  const {error:errorTask,loading:loadingTask,tasks, page, pages } = taskList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (!project._id || project._id !== match.params.id) {\n      dispatch(listProjectDetails(match.params.id))\n      dispatch(listTasks(keyword, pageNumber))\n    }\n  }, [dispatch, match,keyword,pageNumber])\n\n\n\n\n  return (\n    <>\n      <Link className='btn btn-light my-3' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={project.name} />\n          <Row>\n            <Col md={6}>\n               <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h1>{project.name}</h1>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                 <h4> Description: {project.description}</h4>\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n             <Col md={6}>\n              <TaskCreateScreen/>\n              </Col>\n           \n          </Row>\n          <Row>\n           \n               <Col >\n               <h2>Tasks</h2>\n              <Card>\n                <ListGroup variant='flush'>\n                 \n                  <ListGroup.Item>\n                     <Row>\n                       <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>DESCRIPTION</th>\n                <th>STATUS</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n               {tasks.map((task) => (\n              <tr key={task._id}>\n                <td>{task._id}</td>\n                <td>{task.name}</td>\n                <td>{task.description}</td>\n                <td>{task.status}</td>\n                <td>{task.priority}</td>\n                   \n                <td>\n                  <LinkContainer to={`/admin/user/${task._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() =>{}}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n               \n                \n            \n            </tbody>\n          </Table>\n                    </Row>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n              </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default Projectcreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, successDelete, userInfo])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport {\n  listTasks,\n  deleteTask,\n  createTask,\n} from '../actions/taskActions'\nimport { TASK_CREATE_RESET } from '../constants/taskConstants'\n\nconst TaskListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const taskList = useSelector((state) => state.taskList)\n  const { loading, error, tasks, page, pages } = taskList\n\n  const taskDelete = useSelector((state) => state.taskDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = taskDelete\n\n  const taskCreate = useSelector((state) => state.taskCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdTask,\n  } = taskCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: TASK_CREATE_RESET })\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/tasklist`)\n    } else {\n      dispatch(listTasks())\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdTask,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteTask(id))\n    }\n  }\n\n  const createTaskHandler = () => {\n   history.push('/task/create')\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Tasks</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createTaskHandler}>\n            <i className='fas fa-plus'></i> Create Task\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>DESCRIPTION</th>\n                <th>STATUS</th>\n                <th>PRIORITY</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {tasks.map((task) => (\n                <tr key={task._id}>\n                  <td>{task._id}</td>\n                  <td>{task.name}</td>\n                  <td>{task.description}</td>\n                  <td>{task.status}</td>\n                  <td>{task.priority}</td>\n                  <td>\n                    <LinkContainer to={`/admin/task/${task._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(task._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default TaskListScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listTaskDetails, updateTask } from '../actions/taskActions'\nimport { TASK_UPDATE_RESET } from '../constants/taskConstants'\n\nconst TaskEditScreen = ({ match, history }) => {\n  const taskId = match.params.id\n\n  const [name, setName] = useState('')\n  const [status, setStatus] = useState('')\n  const [priority, setPriority] = useState('')\n  const [description, setDescription] = useState('')\n\n  const dispatch = useDispatch()\n\n  const taskDetails = useSelector((state) => state.taskDetails)\n  const { loading, error, task } = taskDetails\n\n  const taskUpdate = useSelector((state) => state.taskUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = taskUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: TASK_UPDATE_RESET })\n      history.push('/admin/tasklist')\n    } else {\n      if (!task.name || task._id !== taskId) {\n        dispatch(listTaskDetails(taskId))\n      } else {\n        setName(task.name)\n        setStatus(task.status)\n        setPriority(task.priority)\n        setDescription(task.description)\n      }\n    }\n  }, [dispatch, history, taskId, task, successUpdate])\n\n   const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateTask({\n        _id: taskId,\n        name,\n        status,\n        priority,\n        description,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/tasklist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Task</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n             <Form.Group controlId='status'>\n                        <Form.Label>Status</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={status}\n                          onChange={(e) =>setStatus(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='Not processed'>1 - Not processed</option>\n                          <option value='Processing'>2 - Processing</option>\n                          <option value='Delivered'>3 - Delivered</option>\n                          <option value='Cancelled'>4 - Cancelled</option>\n                        </Form.Control>\n                </Form.Group>\n\n             <Form.Group controlId='priority'>\n                        <Form.Label>Priority</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={priority}\n                        onChange={(e) =>setPriority(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='Low'>1 - Low</option>\n                          <option value='Medium'>2 - Medium</option>\n                          <option value='High'>3 - High</option>\n                        </Form.Control>\n             </Form.Group>\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default TaskEditScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProjectCreateScreen from './screens/ProjectCreateScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ProjectScreen from './screens/ProjectScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport TaskListScreen from './screens/TaskListScreen'\nimport TaskEditScreen from './screens/TaskEditScreen'\nimport TaskCreateScreen from './screens/TaskCreateScreen'\n\n\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/projects/create' component={ProjectCreateScreen} />\n          <Route path='/project/:id' component={ProjectScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n           <Route path='/profile' component={ProfileScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route\n            path='/admin/tasklist'\n            component={TaskListScreen}\n            exact\n          />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/task/create' component={TaskCreateScreen} />\n          <Route path='/admin/task/:id/edit' component={TaskEditScreen} />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}